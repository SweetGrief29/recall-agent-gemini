import type z from 'zod';
import type { MastraMessageV2 } from '../../agent/message-list/index.js';
import type { StructuredOutputOptions } from '../../agent/types.js';
import type { MastraLanguageModel } from '../../llm/model/shared.types.js';
import type { Processor } from '../index.js';
export type { StructuredOutputOptions } from '../../agent/types.js';
/**
 * StructuredOutputProcessor transforms unstructured agent output into structured JSON
 * using an internal structuring agent and provides real-time streaming support.
 *
 * Features:
 * - Two-stage processing: unstructured â†’ structured using internal agent
 * - Real-time partial JSON parsing during streaming
 * - Schema validation with Zod
 * - Object chunks for partial updates
 * - Configurable error handling strategies
 * - Automatic instruction generation based on schema
 */
export declare class StructuredOutputProcessor<S extends z.ZodTypeAny> implements Processor {
    readonly name = "structured-output";
    schema: S;
    private structuringAgent;
    private errorStrategy;
    private fallbackValue?;
    constructor(options: StructuredOutputOptions<S>, fallbackModel?: MastraLanguageModel);
    processOutputResult(args: {
        messages: MastraMessageV2[];
        abort: (reason?: string) => never;
    }): Promise<MastraMessageV2[]>;
    /**
     * Extract text content from a message
     */
    private extractTextContent;
    /**
     * Generate instructions for the structuring agent based on the schema
     */
    private generateInstructions;
    /**
     * Handle errors based on the configured strategy
     */
    private handleError;
}
//# sourceMappingURL=structured-output.d.ts.map