{"version":3,"sources":["../src/storage/constants.ts"],"names":[],"mappings":";AAEO,IAAM,uBAAA,GAA0B;AAChC,IAAM,WAAA,GAAc;AACpB,IAAM,cAAA,GAAiB;AACvB,IAAM,aAAA,GAAgB;AACtB,IAAM,YAAA,GAAe;AACrB,IAAM,eAAA,GAAkB;AACxB,IAAM,aAAA,GAAgB;AACtB,IAAM,cAAA,GAAiB;AAYvB,IAAM,cAAA,GAAgD;AAAA,EAC3D,IAAI,EAAE,IAAA,EAAM,QAAQ,QAAA,EAAU,KAAA,EAAO,YAAY,IAAA,EAAK;AAAA,EACtD,QAAA,EAAU;AAAA,IACR,IAAA,EAAM;AAAA,GACR;AAAA,EACA,OAAA,EAAS;AAAA,IACP,IAAA,EAAM,MAAA;AAAA,IACN,QAAA,EAAU;AAAA,GACZ;AAAA,EACA,KAAA,EAAO;AAAA,IACL,IAAA,EAAM;AAAA,GACR;AAAA,EACA,MAAA,EAAQ;AAAA,IACN,IAAA,EAAM;AAAA,GACR;AAAA,EACA,oBAAA,EAAsB;AAAA,IACpB,IAAA,EAAM,OAAA;AAAA,IACN,QAAA,EAAU;AAAA,GACZ;AAAA,EACA,iBAAA,EAAmB;AAAA,IACjB,IAAA,EAAM,OAAA;AAAA,IACN,QAAA,EAAU;AAAA,GACZ;AAAA,EACA,iBAAA,EAAmB;AAAA,IACjB,IAAA,EAAM,OAAA;AAAA,IACN,QAAA,EAAU;AAAA,GACZ;AAAA,EACA,KAAA,EAAO;AAAA,IACL,IAAA,EAAM;AAAA,GACR;AAAA,EACA,MAAA,EAAQ;AAAA,IACN,IAAA,EAAM,MAAA;AAAA,IACN,QAAA,EAAU;AAAA,GACZ;AAAA,EACA,QAAA,EAAU;AAAA,IACR,IAAA,EAAM,OAAA;AAAA,IACN,QAAA,EAAU;AAAA,GACZ;AAAA,EACA,gBAAA,EAAkB;AAAA,IAChB,IAAA,EAAM,MAAA;AAAA,IACN,QAAA,EAAU;AAAA,GACZ;AAAA,EACA,aAAA,EAAe;AAAA,IACb,IAAA,EAAM,MAAA;AAAA,IACN,QAAA,EAAU;AAAA,GACZ;AAAA,EACA,mBAAA,EAAqB;AAAA,IACnB,IAAA,EAAM,MAAA;AAAA,IACN,QAAA,EAAU;AAAA,GACZ;AAAA,EACA,oBAAA,EAAsB;AAAA,IACpB,IAAA,EAAM,MAAA;AAAA,IACN,QAAA,EAAU;AAAA,GACZ;AAAA,EACA,aAAA,EAAe;AAAA,IACb,IAAA,EAAM,MAAA;AAAA,IACN,QAAA,EAAU;AAAA,GACZ;AAAA;AAAA,EAGA,YAAA,EAAc;AAAA,IACZ,IAAA,EAAM,MAAA;AAAA,IACN,QAAA,EAAU;AAAA,GACZ;AAAA,EACA,KAAA,EAAO;AAAA,IACL,IAAA,EAAM;AAAA;AAAA,GACR;AAAA,EACA,MAAA,EAAQ;AAAA,IACN,IAAA,EAAM;AAAA;AAAA,GACR;AAAA,EACA,iBAAA,EAAmB;AAAA,IACjB,IAAA,EAAM,OAAA;AAAA;AAAA,IACN,QAAA,EAAU;AAAA,GACZ;AAAA,EACA,cAAA,EAAgB;AAAA,IACd,IAAA,EAAM,OAAA;AAAA;AAAA,IACN,QAAA,EAAU;AAAA,GACZ;AAAA;AAAA;AAAA;AAAA,EAIA,UAAA,EAAY;AAAA,IACV,IAAA,EAAM,MAAA;AAAA;AAAA,IACN,QAAA,EAAU;AAAA,GACZ;AAAA,EACA,MAAA,EAAQ;AAAA,IACN,IAAA,EAAM,OAAA;AAAA;AAAA,IACN,QAAA,EAAU;AAAA,GACZ;AAAA,EACA,QAAA,EAAU;AAAA,IACR,IAAA,EAAM,MAAA;AAAA,IACN,QAAA,EAAU;AAAA,GACZ;AAAA,EACA,MAAA,EAAQ;AAAA,IACN,IAAA,EAAM;AAAA,GACR;AAAA,EACA,UAAA,EAAY;AAAA,IACV,IAAA,EAAM,MAAA;AAAA,IACN,QAAA,EAAU;AAAA,GACZ;AAAA,EACA,QAAA,EAAU;AAAA,IACR,IAAA,EAAM,MAAA;AAAA,IACN,QAAA,EAAU;AAAA,GACZ;AAAA,EACA,SAAA,EAAW;AAAA,IACT,IAAA,EAAM;AAAA,GACR;AAAA,EACA,SAAA,EAAW;AAAA,IACT,IAAA,EAAM;AAAA;AAEV;AAEO,IAAM,cAAA,GAAgD;AAAA;AAAA,EAE3D,OAAA,EAAS,EAAE,IAAA,EAAM,MAAA,EAAQ,UAAU,KAAA,EAAM;AAAA,EACzC,MAAA,EAAQ,EAAE,IAAA,EAAM,MAAA,EAAQ,UAAU,KAAA,EAAM;AAAA,EACxC,YAAA,EAAc,EAAE,IAAA,EAAM,MAAA,EAAQ,UAAU,IAAA,EAAK;AAAA,EAC7C,IAAA,EAAM,EAAE,IAAA,EAAM,MAAA,EAAQ,UAAU,KAAA,EAAM;AAAA,EACtC,KAAA,EAAO,EAAE,IAAA,EAAM,OAAA,EAAS,UAAU,IAAA,EAAK;AAAA;AAAA,EACvC,QAAA,EAAU,EAAE,IAAA,EAAM,SAAA,EAAW,UAAU,KAAA,EAAM;AAAA;AAAA,EAC7C,UAAA,EAAY,EAAE,IAAA,EAAM,OAAA,EAAS,UAAU,IAAA,EAAK;AAAA,EAC5C,QAAA,EAAU,EAAE,IAAA,EAAM,OAAA,EAAS,UAAU,IAAA,EAAK;AAAA,EAC1C,KAAA,EAAO,EAAE,IAAA,EAAM,OAAA,EAAS,UAAU,IAAA,EAAK;AAAA,EACvC,KAAA,EAAO,EAAE,IAAA,EAAM,OAAA,EAAS,UAAU,IAAA,EAAK;AAAA,EACvC,MAAA,EAAQ,EAAE,IAAA,EAAM,OAAA,EAAS,UAAU,IAAA,EAAK;AAAA,EACxC,KAAA,EAAO,EAAE,IAAA,EAAM,OAAA,EAAS,UAAU,IAAA,EAAK;AAAA,EACvC,SAAA,EAAW,EAAE,IAAA,EAAM,WAAA,EAAa,UAAU,KAAA,EAAM;AAAA;AAAA,EAChD,OAAA,EAAS,EAAE,IAAA,EAAM,WAAA,EAAa,UAAU,IAAA,EAAK;AAAA;AAAA,EAC7C,SAAA,EAAW,EAAE,IAAA,EAAM,WAAA,EAAa,UAAU,KAAA,EAAM;AAAA;AAAA,EAChD,SAAA,EAAW,EAAE,IAAA,EAAM,WAAA,EAAa,UAAU,IAAA,EAAK;AAAA;AAAA,EAC/C,OAAA,EAAS,EAAE,IAAA,EAAM,SAAA,EAAW,UAAU,KAAA;AACxC;AAEO,IAAM,aAAA,GAAoE;AAAA,EAC/E,CAAC,uBAAuB,GAAG;AAAA,IACzB,aAAA,EAAe;AAAA,MACb,IAAA,EAAM;AAAA,KACR;AAAA,IACA,MAAA,EAAQ;AAAA,MACN,IAAA,EAAM;AAAA,KACR;AAAA,IACA,UAAA,EAAY,EAAE,IAAA,EAAM,MAAA,EAAQ,UAAU,IAAA,EAAK;AAAA,IAC3C,QAAA,EAAU;AAAA,MACR,IAAA,EAAM;AAAA,KACR;AAAA,IACA,SAAA,EAAW;AAAA,MACT,IAAA,EAAM;AAAA,KACR;AAAA,IACA,SAAA,EAAW;AAAA,MACT,IAAA,EAAM;AAAA;AACR,GACF;AAAA,EACA,CAAC,aAAa,GAAG,cAAA;AAAA,EACjB,CAAC,WAAW,GAAG;AAAA,IACb,KAAA,EAAO;AAAA,MACL,IAAA,EAAM;AAAA,KACR;AAAA,IACA,MAAA,EAAQ;AAAA,MACN,IAAA,EAAM;AAAA,KACR;AAAA,IACA,MAAA,EAAQ;AAAA,MACN,IAAA,EAAM;AAAA,KACR;AAAA,IACA,UAAA,EAAY;AAAA,MACV,IAAA,EAAM;AAAA,KACR;AAAA,IACA,WAAA,EAAa;AAAA,MACX,IAAA,EAAM;AAAA,KACR;AAAA,IACA,YAAA,EAAc;AAAA,MACZ,IAAA,EAAM;AAAA,KACR;AAAA,IACA,SAAA,EAAW;AAAA,MACT,IAAA,EAAM,OAAA;AAAA,MACN,QAAA,EAAU;AAAA,KACZ;AAAA,IACA,aAAA,EAAe;AAAA,MACb,IAAA,EAAM;AAAA,KACR;AAAA,IACA,MAAA,EAAQ;AAAA,MACN,IAAA,EAAM;AAAA,KACR;AAAA,IACA,UAAA,EAAY;AAAA,MACV,IAAA,EAAM;AAAA,KACR;AAAA,IACA,SAAA,EAAW;AAAA,MACT,IAAA,EAAM,WAAA;AAAA,MACN,QAAA,EAAU;AAAA;AACZ,GACF;AAAA,EACA,CAAC,aAAa,GAAG;AAAA,IACf,IAAI,EAAE,IAAA,EAAM,QAAQ,QAAA,EAAU,KAAA,EAAO,YAAY,IAAA,EAAK;AAAA,IACtD,UAAA,EAAY,EAAE,IAAA,EAAM,MAAA,EAAQ,UAAU,KAAA,EAAM;AAAA,IAC5C,KAAA,EAAO,EAAE,IAAA,EAAM,MAAA,EAAQ,UAAU,KAAA,EAAM;AAAA,IACvC,QAAA,EAAU,EAAE,IAAA,EAAM,MAAA,EAAQ,UAAU,IAAA,EAAK;AAAA,IACzC,SAAA,EAAW,EAAE,IAAA,EAAM,WAAA,EAAa,UAAU,KAAA,EAAM;AAAA,IAChD,SAAA,EAAW,EAAE,IAAA,EAAM,WAAA,EAAa,UAAU,KAAA;AAAM,GAClD;AAAA,EACA,CAAC,cAAc,GAAG;AAAA,IAChB,IAAI,EAAE,IAAA,EAAM,QAAQ,QAAA,EAAU,KAAA,EAAO,YAAY,IAAA,EAAK;AAAA,IACtD,SAAA,EAAW,EAAE,IAAA,EAAM,MAAA,EAAQ,UAAU,KAAA,EAAM;AAAA,IAC3C,OAAA,EAAS,EAAE,IAAA,EAAM,MAAA,EAAQ,UAAU,KAAA,EAAM;AAAA,IACzC,IAAA,EAAM,EAAE,IAAA,EAAM,MAAA,EAAQ,UAAU,KAAA,EAAM;AAAA,IACtC,IAAA,EAAM,EAAE,IAAA,EAAM,MAAA,EAAQ,UAAU,KAAA,EAAM;AAAA,IACtC,SAAA,EAAW,EAAE,IAAA,EAAM,WAAA,EAAa,UAAU,KAAA,EAAM;AAAA,IAChD,UAAA,EAAY,EAAE,IAAA,EAAM,MAAA,EAAQ,UAAU,IAAA;AAAK,GAC7C;AAAA,EACA,CAAC,cAAc,GAAG,cAAA;AAAA,EAClB,CAAC,YAAY,GAAG;AAAA,IACd,IAAI,EAAE,IAAA,EAAM,QAAQ,QAAA,EAAU,KAAA,EAAO,YAAY,IAAA,EAAK;AAAA,IACtD,YAAA,EAAc,EAAE,IAAA,EAAM,MAAA,EAAQ,UAAU,IAAA,EAAK;AAAA,IAC7C,IAAA,EAAM,EAAE,IAAA,EAAM,MAAA,EAAQ,UAAU,KAAA,EAAM;AAAA,IACtC,OAAA,EAAS,EAAE,IAAA,EAAM,MAAA,EAAQ,UAAU,KAAA,EAAM;AAAA,IACzC,KAAA,EAAO,EAAE,IAAA,EAAM,MAAA,EAAQ,UAAU,KAAA,EAAM;AAAA,IACvC,IAAA,EAAM,EAAE,IAAA,EAAM,SAAA,EAAW,UAAU,KAAA,EAAM;AAAA,IACzC,UAAA,EAAY,EAAE,IAAA,EAAM,OAAA,EAAS,UAAU,IAAA,EAAK;AAAA,IAC5C,MAAA,EAAQ,EAAE,IAAA,EAAM,OAAA,EAAS,UAAU,IAAA,EAAK;AAAA,IACxC,MAAA,EAAQ,EAAE,IAAA,EAAM,OAAA,EAAS,UAAU,IAAA,EAAK;AAAA,IACxC,KAAA,EAAO,EAAE,IAAA,EAAM,OAAA,EAAS,UAAU,IAAA,EAAK;AAAA,IACvC,KAAA,EAAO,EAAE,IAAA,EAAM,MAAA,EAAQ,UAAU,IAAA,EAAK;AAAA,IACtC,SAAA,EAAW,EAAE,IAAA,EAAM,QAAA,EAAU,UAAU,KAAA,EAAM;AAAA,IAC7C,OAAA,EAAS,EAAE,IAAA,EAAM,QAAA,EAAU,UAAU,KAAA,EAAM;AAAA,IAC3C,SAAA,EAAW,EAAE,IAAA,EAAM,WAAA,EAAa,UAAU,KAAA;AAAM,GAClD;AAAA,EACA,CAAC,eAAe,GAAG;AAAA,IACjB,IAAI,EAAE,IAAA,EAAM,QAAQ,QAAA,EAAU,KAAA,EAAO,YAAY,IAAA,EAAK;AAAA,IACtD,aAAA,EAAe,EAAE,IAAA,EAAM,MAAA,EAAQ,UAAU,IAAA,EAAK;AAAA,IAC9C,QAAA,EAAU,EAAE,IAAA,EAAM,OAAA,EAAS,UAAU,IAAA,EAAK;AAAA,IAC1C,SAAA,EAAW,EAAE,IAAA,EAAM,WAAA,EAAa,UAAU,KAAA,EAAM;AAAA,IAChD,SAAA,EAAW,EAAE,IAAA,EAAM,WAAA,EAAa,UAAU,KAAA;AAAM;AAEpD","file":"chunk-R5GESRGB.js","sourcesContent":["import type { StorageColumn } from './types';\n\nexport const TABLE_WORKFLOW_SNAPSHOT = 'mastra_workflow_snapshot';\nexport const TABLE_EVALS = 'mastra_evals';\nexport const TABLE_MESSAGES = 'mastra_messages';\nexport const TABLE_THREADS = 'mastra_threads';\nexport const TABLE_TRACES = 'mastra_traces';\nexport const TABLE_RESOURCES = 'mastra_resources';\nexport const TABLE_SCORERS = 'mastra_scorers';\nexport const TABLE_AI_SPANS = 'mastra_ai_spans';\n\nexport type TABLE_NAMES =\n  | typeof TABLE_WORKFLOW_SNAPSHOT\n  | typeof TABLE_EVALS\n  | typeof TABLE_MESSAGES\n  | typeof TABLE_THREADS\n  | typeof TABLE_TRACES\n  | typeof TABLE_RESOURCES\n  | typeof TABLE_SCORERS\n  | typeof TABLE_AI_SPANS;\n\nexport const SCORERS_SCHEMA: Record<string, StorageColumn> = {\n  id: { type: 'text', nullable: false, primaryKey: true },\n  scorerId: {\n    type: 'text',\n  },\n  traceId: {\n    type: 'text',\n    nullable: true,\n  },\n  runId: {\n    type: 'text',\n  },\n  scorer: {\n    type: 'jsonb',\n  },\n  preprocessStepResult: {\n    type: 'jsonb',\n    nullable: true,\n  },\n  extractStepResult: {\n    type: 'jsonb',\n    nullable: true,\n  },\n  analyzeStepResult: {\n    type: 'jsonb',\n    nullable: true,\n  },\n  score: {\n    type: 'float',\n  },\n  reason: {\n    type: 'text',\n    nullable: true,\n  },\n  metadata: {\n    type: 'jsonb',\n    nullable: true,\n  },\n  preprocessPrompt: {\n    type: 'text',\n    nullable: true,\n  },\n  extractPrompt: {\n    type: 'text',\n    nullable: true,\n  },\n  generateScorePrompt: {\n    type: 'text',\n    nullable: true,\n  },\n  generateReasonPrompt: {\n    type: 'text',\n    nullable: true,\n  },\n  analyzePrompt: {\n    type: 'text',\n    nullable: true,\n  },\n\n  // Deprecated\n  reasonPrompt: {\n    type: 'text',\n    nullable: true,\n  },\n  input: {\n    type: 'jsonb', // MESSAGE INPUT\n  },\n  output: {\n    type: 'jsonb', // MESSAGE OUTPUT\n  },\n  additionalContext: {\n    type: 'jsonb', // DATA FROM THE CONTEXT PARAM ON AN AGENT\n    nullable: true,\n  },\n  runtimeContext: {\n    type: 'jsonb', // THE EVALUATE RUNTIME CONTEXT FOR THE RUN\n    nullable: true,\n  },\n  /**\n   * Things you can evaluate\n   */\n  entityType: {\n    type: 'text', // WORKFLOW, AGENT, TOOL, STEP, NETWORK\n    nullable: true,\n  },\n  entity: {\n    type: 'jsonb', // MINIMAL JSON DATA ABOUT WORKFLOW, AGENT, TOOL, STEP, NETWORK\n    nullable: true,\n  },\n  entityId: {\n    type: 'text',\n    nullable: true,\n  },\n  source: {\n    type: 'text',\n  },\n  resourceId: {\n    type: 'text',\n    nullable: true,\n  },\n  threadId: {\n    type: 'text',\n    nullable: true,\n  },\n  createdAt: {\n    type: 'timestamp',\n  },\n  updatedAt: {\n    type: 'timestamp',\n  },\n};\n\nexport const AI_SPAN_SCHEMA: Record<string, StorageColumn> = {\n  // Composite primary key of traceId and spanId\n  traceId: { type: 'text', nullable: false },\n  spanId: { type: 'text', nullable: false },\n  parentSpanId: { type: 'text', nullable: true },\n  name: { type: 'text', nullable: false },\n  scope: { type: 'jsonb', nullable: true }, // Mastra package info {\"core-version\": \"0.1.0\"}\n  spanType: { type: 'integer', nullable: false }, // WORKFLOW_RUN, WORKFLOW_STEP, AGENT_RUN, AGENT_STEP, TOOL_RUN, TOOL_STEP, etc.\n  attributes: { type: 'jsonb', nullable: true },\n  metadata: { type: 'jsonb', nullable: true },\n  links: { type: 'jsonb', nullable: true },\n  input: { type: 'jsonb', nullable: true },\n  output: { type: 'jsonb', nullable: true },\n  error: { type: 'jsonb', nullable: true },\n  startedAt: { type: 'timestamp', nullable: false }, // When the span started\n  endedAt: { type: 'timestamp', nullable: true }, // When the span ended\n  createdAt: { type: 'timestamp', nullable: false }, // The time the database record was created\n  updatedAt: { type: 'timestamp', nullable: true }, // The time the database record was last updated\n  isEvent: { type: 'boolean', nullable: false },\n};\n\nexport const TABLE_SCHEMAS: Record<TABLE_NAMES, Record<string, StorageColumn>> = {\n  [TABLE_WORKFLOW_SNAPSHOT]: {\n    workflow_name: {\n      type: 'text',\n    },\n    run_id: {\n      type: 'text',\n    },\n    resourceId: { type: 'text', nullable: true },\n    snapshot: {\n      type: 'text',\n    },\n    createdAt: {\n      type: 'timestamp',\n    },\n    updatedAt: {\n      type: 'timestamp',\n    },\n  },\n  [TABLE_SCORERS]: SCORERS_SCHEMA,\n  [TABLE_EVALS]: {\n    input: {\n      type: 'text',\n    },\n    output: {\n      type: 'text',\n    },\n    result: {\n      type: 'jsonb',\n    },\n    agent_name: {\n      type: 'text',\n    },\n    metric_name: {\n      type: 'text',\n    },\n    instructions: {\n      type: 'text',\n    },\n    test_info: {\n      type: 'jsonb',\n      nullable: true,\n    },\n    global_run_id: {\n      type: 'text',\n    },\n    run_id: {\n      type: 'text',\n    },\n    created_at: {\n      type: 'timestamp',\n    },\n    createdAt: {\n      type: 'timestamp',\n      nullable: true,\n    },\n  },\n  [TABLE_THREADS]: {\n    id: { type: 'text', nullable: false, primaryKey: true },\n    resourceId: { type: 'text', nullable: false },\n    title: { type: 'text', nullable: false },\n    metadata: { type: 'text', nullable: true },\n    createdAt: { type: 'timestamp', nullable: false },\n    updatedAt: { type: 'timestamp', nullable: false },\n  },\n  [TABLE_MESSAGES]: {\n    id: { type: 'text', nullable: false, primaryKey: true },\n    thread_id: { type: 'text', nullable: false },\n    content: { type: 'text', nullable: false },\n    role: { type: 'text', nullable: false },\n    type: { type: 'text', nullable: false },\n    createdAt: { type: 'timestamp', nullable: false },\n    resourceId: { type: 'text', nullable: true },\n  },\n  [TABLE_AI_SPANS]: AI_SPAN_SCHEMA,\n  [TABLE_TRACES]: {\n    id: { type: 'text', nullable: false, primaryKey: true },\n    parentSpanId: { type: 'text', nullable: true },\n    name: { type: 'text', nullable: false },\n    traceId: { type: 'text', nullable: false },\n    scope: { type: 'text', nullable: false },\n    kind: { type: 'integer', nullable: false },\n    attributes: { type: 'jsonb', nullable: true },\n    status: { type: 'jsonb', nullable: true },\n    events: { type: 'jsonb', nullable: true },\n    links: { type: 'jsonb', nullable: true },\n    other: { type: 'text', nullable: true },\n    startTime: { type: 'bigint', nullable: false },\n    endTime: { type: 'bigint', nullable: false },\n    createdAt: { type: 'timestamp', nullable: false },\n  },\n  [TABLE_RESOURCES]: {\n    id: { type: 'text', nullable: false, primaryKey: true },\n    workingMemory: { type: 'text', nullable: true },\n    metadata: { type: 'jsonb', nullable: true },\n    createdAt: { type: 'timestamp', nullable: false },\n    updatedAt: { type: 'timestamp', nullable: false },\n  },\n};\n"]}