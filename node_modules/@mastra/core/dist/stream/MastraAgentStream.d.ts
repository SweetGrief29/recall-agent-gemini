import { ReadableStream } from 'stream/web';
import type { ChunkType } from './types.js';
export declare class MastraAgentStream<Output> extends ReadableStream<ChunkType> {
    #private;
    constructor({ createStream, getOptions, }: {
        createStream: (writer: WritableStream<ChunkType>, onResult: (result: Output) => void) => Promise<ReadableStream<any>> | ReadableStream<any>;
        getOptions: () => Promise<{
            runId: string;
        }> | {
            runId: string;
        };
    });
    get finishReason(): Promise<string | null>;
    get toolCalls(): Promise<Record<string, any>[]>;
    get toolResults(): Promise<Record<string, any>[]>;
    get usage(): Promise<{
        promptTokens: number;
        completionTokens: number;
        totalTokens: number;
    }>;
    get text(): Promise<string>;
    get object(): Promise<Output extends undefined ? null : Output>;
    get textStream(): ReadableStream<string>;
}
//# sourceMappingURL=MastraAgentStream.d.ts.map