import type { LanguageModelV2FinishReason, LanguageModelV2StreamPart, LanguageModelV2Usage, SharedV2ProviderMetadata } from '@ai-sdk/provider-v5';
import type { CoreMessage, ObjectStreamPart, TextStreamPart, ToolSet } from 'ai-v5';
import type { ChunkType } from '../../types.js';
type StreamPart = Exclude<LanguageModelV2StreamPart, {
    type: 'finish';
}> | {
    type: 'finish';
    finishReason: LanguageModelV2FinishReason;
    usage: LanguageModelV2Usage;
    providerMetadata: SharedV2ProviderMetadata;
    messages: {
        all: CoreMessage[];
        user: CoreMessage[];
        nonUser: CoreMessage[];
    };
};
export declare function convertFullStreamChunkToMastra(value: StreamPart, ctx: {
    runId: string;
}): ChunkType | undefined;
export type OutputChunkType = TextStreamPart<ToolSet> | ObjectStreamPart<unknown> | undefined;
export declare function convertMastraChunkToAISDKv5({ chunk, mode, }: {
    chunk: ChunkType;
    mode?: 'generate' | 'stream';
}): OutputChunkType;
export {};
//# sourceMappingURL=transform.d.ts.map