import type { AITracesPaginatedArg } from '@mastra/core';
import type { Context } from '../types.js';
interface ObservabilityContext extends Context {
    traceId?: string;
    body?: AITracesPaginatedArg;
}
/**
 * Get a complete AI trace by trace ID
 * Returns all spans in the trace with their parent-child relationships
 */
export declare function getAITraceHandler({ mastra, traceId }: ObservabilityContext & {
    traceId: string;
}): Promise<import("@mastra/core").AITraceRecord>;
/**
 * Get paginated AI traces with filtering and pagination
 * Returns only root spans (parent spans) for pagination, not child spans
 */
export declare function getAITracesPaginatedHandler({ mastra, body }: ObservabilityContext): Promise<{
    pagination: import("@mastra/core").PaginationInfo;
    spans: import("@mastra/core").AISpanRecord[];
}>;
export {};
//# sourceMappingURL=observability.d.ts.map