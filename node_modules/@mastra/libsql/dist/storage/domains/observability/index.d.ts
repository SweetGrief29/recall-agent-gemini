import { ObservabilityStorage } from '@mastra/core/storage';
import type { AISpanRecord, AITraceRecord, AITracesPaginatedArg, PaginationInfo } from '@mastra/core/storage';
import type { StoreOperationsLibSQL } from '../operations/index.js';
export declare class ObservabilityLibSQL extends ObservabilityStorage {
    private operations;
    constructor({ operations }: {
        operations: StoreOperationsLibSQL;
    });
    createAISpan(span: AISpanRecord): Promise<void>;
    getAITrace(traceId: string): Promise<AITraceRecord | null>;
    updateAISpan({ spanId, traceId, updates, }: {
        spanId: string;
        traceId: string;
        updates: Partial<Omit<AISpanRecord, 'spanId' | 'traceId'>>;
    }): Promise<void>;
    getAITracesPaginated({ filters, pagination, }: AITracesPaginatedArg): Promise<{
        pagination: PaginationInfo;
        spans: AISpanRecord[];
    }>;
    batchCreateAISpans(args: {
        records: AISpanRecord[];
    }): Promise<void>;
    batchUpdateAISpans(args: {
        records: {
            traceId: string;
            spanId: string;
            updates: Partial<Omit<AISpanRecord, 'spanId' | 'traceId'>>;
        }[];
    }): Promise<void>;
    batchDeleteAITraces(args: {
        traceIds: string[];
    }): Promise<void>;
}
//# sourceMappingURL=index.d.ts.map